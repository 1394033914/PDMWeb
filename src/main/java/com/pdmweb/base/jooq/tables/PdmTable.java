/*
 * This file is generated by jOOQ.
 */
package com.pdmweb.base.jooq.tables;


import com.pdmweb.base.jooq.DefaultSchema;
import com.pdmweb.base.jooq.Indexes;
import com.pdmweb.base.jooq.Keys;
import com.pdmweb.base.jooq.tables.records.PdmTableRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdmTable extends TableImpl<PdmTableRecord> {

    private static final long serialVersionUID = -2023023885;

    /**
     * The reference instance of <code>pdm_table</code>
     */
    public static final PdmTable PDM_TABLE = new PdmTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdmTableRecord> getRecordType() {
        return PdmTableRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<PdmTableRecord, Object> TABLE_ID = createField(DSL.name("table_id"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"Long\"").nullable(false), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<PdmTableRecord, Object> PDM_ID = createField(DSL.name("pdm_id"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"Long\"").nullable(false), this, "");

    /**
     * The column <code>pdm_table.table_code</code>.
     */
    public final TableField<PdmTableRecord, String> TABLE_CODE = createField(DSL.name("table_code"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>pdm_table.table_name</code>.
     */
    public final TableField<PdmTableRecord, String> TABLE_NAME = createField(DSL.name("table_name"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>pdm_table.table_desc</code>.
     */
    public final TableField<PdmTableRecord, String> TABLE_DESC = createField(DSL.name("table_desc"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>pdm_table.update_time</code>.
     */
    public final TableField<PdmTableRecord, String> UPDATE_TIME = createField(DSL.name("update_time"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>pdm_table.create_time</code>.
     */
    public final TableField<PdmTableRecord, String> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>pdm_table</code> table reference
     */
    public PdmTable() {
        this(DSL.name("pdm_table"), null);
    }

    /**
     * Create an aliased <code>pdm_table</code> table reference
     */
    public PdmTable(String alias) {
        this(DSL.name(alias), PDM_TABLE);
    }

    /**
     * Create an aliased <code>pdm_table</code> table reference
     */
    public PdmTable(Name alias) {
        this(alias, PDM_TABLE);
    }

    private PdmTable(Name alias, Table<PdmTableRecord> aliased) {
        this(alias, aliased, null);
    }

    private PdmTable(Name alias, Table<PdmTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PdmTable(Table<O> child, ForeignKey<O, PdmTableRecord> key) {
        super(child, key, PDM_TABLE);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SQLITE_AUTOINDEX_PDM_TABLE_1);
    }

    @Override
    public UniqueKey<PdmTableRecord> getPrimaryKey() {
        return Keys.PK_PDM_TABLE;
    }

    @Override
    public List<UniqueKey<PdmTableRecord>> getKeys() {
        return Arrays.<UniqueKey<PdmTableRecord>>asList(Keys.PK_PDM_TABLE);
    }

    @Override
    public PdmTable as(String alias) {
        return new PdmTable(DSL.name(alias), this);
    }

    @Override
    public PdmTable as(Name alias) {
        return new PdmTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PdmTable rename(String name) {
        return new PdmTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PdmTable rename(Name name) {
        return new PdmTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Object, Object, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
